#!/bin/bash

# Requires lemonbar-xft-git from AUR

CURRENT_USER=$(whoami)

FONT_1="Ubuntu:style=Regular::size=10"
FONT_2="Ubuntu:style=Bold:size=10"
FONT_3="FontAwesome:style=Regular:size=8"
FONT_4="FontAwesome:style=Regular:size=9"
FONT_5="FontAwesome:style=Regular:size=10" 

source bar-colors.sh

Active() {
    xtitle | head -c 100
}

TimeDate() { 
    echo "$(date +"%A %B %d")  %{T2}$(date +"%H:%M")%{T-}"
}

Battery() {
    BATTERY_PERCENTAGE=$(acpi --battery | cut -d" " -f 4 | sed 's/[^0-9]*//g')
    BATTERY_STATUS=$( acpi --battery | tail -n 1 | cut -d" " -f 3 | sed 's/,$//' )
    BATTERY_ICON=""
    BAT_COL="$FG"

    case $BATTERY_STATUS in
           'Charging') BATTERY_ICON="" ;;
           'Full') BATTERY_ICON="" ;;
           'Discharging') 
               if [ $BATTERY_PERCENTAGE -ge 90 ]; then BATTERY_ICON=""; fi
               if [ $BATTERY_PERCENTAGE -le 89 ]; then BATTERY_ICON=""; fi
               if [ $BATTERY_PERCENTAGE -le 60 ]; then BATTERY_ICON=""; fi
               if [ $BATTERY_PERCENTAGE -le 30 ]; then BATTERY_ICON=""; fi
               if [ $BATTERY_PERCENTAGE -le 10 ]; then BATTERY_ICON=""; fi
               ;;
    esac
    
    echo "%{T5}$BATTERY_ICON%{T-} $BATTERY_PERCENTAGE%"
}

Volume() {
    # Don't forget to install pulseaudio
    AUDIO_VOLUME=$(pactl list sinks | grep "Volume: front-left" | awk '{print $5}')
    AUDIO_STATUS=$(pactl list sinks | grep "Mute:" | awk '{print $2}')
    VOL_COL="$FG"
    VOL_ICON=""
    if [ $AUDIO_STATUS == "yes" ]; then AUDIO_VOLUME=""; VOL_ICON=""; fi
    echo "%{A:pactl set-sink-mute 0 toggle:}%{A4:pactl set-sink-volume 0 +1%:}%{A5:pactl set-sink-volume 0 -1%:}%{F$VOL_COL}%{T5}$VOL_ICON%{T-}%{F-} $AUDIO_VOLUME%{A}%{A}%{A}"
}

WiFi() {
    WIFI_SSID=$(iwgetid -r)
    WIFI_COL="$FG"
    if [ -z "$WIFI_SSID" ]; then WIFI_COL="$INACTIVE"; fi
    echo "%{A:urxvt -e sudo wifi-menu:}%{F$WIFI_COL}%{T5}%{T-}%{F-}%{A}"
}

CPUTemp() {
    TEMP=$(acpi -t | cut -d ' ' -f 4 | gawk '{printf("%d\n", $1)}')
    TEMP_SYMBOL=""
    echo "%{T3}$TEMP_SYMBOL%{T-} $TEMP°c"
}

Desktops() {
    DESKTOP_STATUS=$(bspc control --get-status | tr ":" "\n" | sed '1d' | head --lines=-1)
    DESKTOP_INFO=""
    for desktop in $DESKTOP_STATUS; do
        DESKTOP_NAME=$(echo "$desktop" | cut -c2-)
        case $desktop in
            O*|F*) DESKTOP_COLOUR="$ACTIVE" ;;
            o*) DESKTOP_COLOUR="$OCCUPIED" ;;
            f*) DESKTOP_COLOUR="$INACTIVE";;
        esac
        case $DESKTOP_NAME in
            browser) DESKTOP_ICON="" ;;
            code) DESKTOP_ICON="" ;; 
            files) DESKTOP_ICON="" ;;
            media) DESKTOP_ICON="" ;;
            download) DESKTOP_ICON="" ;;
            *) DESKTOP_ICON="" ;; 
        esac
        DESKTOP_INFO="$DESKTOP_INFO  %{A:bspc desktop -f $DESKTOP_NAME:}%{F$DESKTOP_COLOUR}%{T5}$DESKTOP_ICON%{T-}%{F-}%{A}"
    done

    echo "$DESKTOP_INFO"
}

Notifications() {
    GAP="  "

    # Check for Arch updates
    UP_COUNT=$(cat ~/.update_count | cut -d ";" -f 2)
    icon_update=""
    if [ ! $UP_COUNT == 0 ]; then 
        NOTIFICATIONS="$GAP%{A:bspc desktop -f download; urxvt -e pacaur -Syu:}%{F$FG}%{T5}$icon_update%{T-}%{F-}%{A}$NOTIFICATIONS"; 
    fi

    # Any active torrents?
    #TORRENTS=$(cat /home/$CURRENT_USER/.torrentind)
    #TORRENT_COLOR="$INACTIVE"
    #ACTIVE_TORRENTS=$(echo "$TORRENTS" | cut -d':' -f 1)
    #COMPLETED_TORRENTS=$(echo "$TORRENTS" | cut -d':' -f 2)
    #if [ $ACTIVE_TORRENTS -gt 0 ]; then TORRENT_COLOR="$FG"; fi
    #if [ $COMPLETED_TORRENTS -gt 0 ]; then TORRENT_COLOR="$GREEN" ; fi
    #if [ $ACTIVE_TORRENTS -gt 0 ]; then 
    #    NOTIFICATIONS="$GAP%{A:bspc desktop -f download; urxvt -e transmission-remote-cli:}%{F$TORRENT_COLOR}%{T5}%{T-}%{F-}%{A}$NOTIFICATIONS";
    #fi

    # Dropbox
    DROPBOX_STATUS=$(dropbox-cli status | wc -l)
    if [ $DROPBOX_STATUS -gt 1 ]; then NOTIFICATIONS="$GAP%{F$FG}%{T5}%{T-}%{F-}$NOTIFICATIONS"; fi

    # Check for Caps Lock
    CAPS_SATUS=$(xset -q | grep 'Caps Lock:' | cut -d ' ' -f 10)
    if [ $CAPS_SATUS == 'on' ]; then NOTIFICATIONS="$GAP%{T5}%{T-}$NOTIFICATIONS"; fi

    echo "$NOTIFICATIONS"
}

while true
do
    echo -e "%{l}$(Desktops) \
             %{c}$(Active) \
             %{r}$(Notifications)  $(WiFi)  $(Volume)  $(Battery)  $(CPUTemp)      $(TimeDate)"
    sleep .25
done | lemonbar -p -g 1338x23+12+12 -B $BG -F $FG -f "$FONT_1" -f "$FONT_2" -f "$FONT_3" -f "$FONT_4" -f "$FONT_5" | sh
